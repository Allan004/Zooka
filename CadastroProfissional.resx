<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA8gAAAINCAYAAADiAFaxAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAADwlJREFUeF7t3cF54soWhdEOgRA6hA6BEAjBITgUQnAIDoGpZoTgEK4i4H11d/s+
        mlPQgAEDWoM1OQhhNPutovRjs9n8uGvjMN+Mw+tmHJabcVhtxmG9GYcNAAAAd621W2u41nKt6VrbzUrz
        3ZEy+FbtYo3D4vcFFMIAAADPp7Vea77WfncVzGVwc4nil804vHcuHAAAAM+ttWBrwm+P5TK4mdxef+tc
        HAAAAKapNeK89OONlMHV5T8Dlk8DAACwT2vGl9KTV1YGV5Mw/uh8cQAAAOhpDXmzUC6Di8tS6rZz2e4X
        BQAAgGO0prz60usyuJhsvuU3xgAAAFxK2/36apt5lcFFZLvufzpfBgAAAL6iteaidOgFlMGX5K5xK/rd
        LwAAAACXdPG7yWVwtnH4aXdqAAAAbqg16M/Sp2cqg7OMwy9LqgEAAPgGrUV/lU49QxmcLI9v2v0DAQAA
        4Ja+/DioMjiJOAYAAOB+fCmSy+Bo4hgAAID7c3Ykl8FRxDEAAAD366xILoO/EscAAADcv5MjuQwOym7V
        ux8KAAAA9+ik3a3LYK8859ijnAAAAHgUrWGPfk5yGXSNw+z3A5h3PwwAAADuWWvZWencjjLoGodl50MA
        AADgESxL53aUQTEOi87JAQAA4JEsSu+eFMhZWu13xwAAADy61rYHl1qXwU4gv3VOCgAAAI/o4FLrMtiK
        43nnZAAAAPDI5qV/jwjkVedEAAAA8MhWpX8PBvI4vHROAgAAAM/gpXTwgUD+6JwAAAAAnsFH6eBuILt7
        DAAAwPMrd5F7gbzuvBEAAACeyXq3h3fj2M7VAAAATMUfO1rvBrLnHgMAADAVb/1AHodZ52AAAAB4ZrNe
        INucCwAAgKn5b7Ou7UB+7xwIAAAAz+z9z0C2vBoAAIDp+neZ9WcgLzoHAAAAwBQstgN52TkAAAAApmC5
        HcjrzgEAAAAwBesEst8fAwAAMHW/A3leXgAAAIBpmbdAfu28AAAAAFPyaoMuAAAAGIdlC+RV5wUAAACY
        kpUdrAEAAGAc1i2Qd4cAAAAwOQIZAAAABDIAAACEQAYAAACBDAAAACGQAQAAQCADAABACGQAAAAQyAAA
        ABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRABgAA
        AIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYAAACBDAAAACGQAQAAQCADAABA
        CGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAE
        MgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYAAACBDAAAACGQ
        AQAAQCADAABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgA
        AAAQAhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYA
        AACBDAAAACGQAQAAQCADAABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAA
        QAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAA
        BDIAAACEQAYAAACBDAAAACGQAQAAQCADAABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAh
        kAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDI
        AAAAEAIZAAAABDIAAACEQAYAAACBDAAAACGQAQAAQCADAABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAG
        AAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMA
        AEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYAAACBDAAAACGQAQAAQCADAABACGQAAAAQyAAAABACGQAA
        AAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRABgAAAIEMAAAA
        IZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYAAACBDAAAACGQAQAAQCADAABACGQAAAAQ
        yAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRA
        BgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYAAACBDAAAACGQAQAAQCAD
        AABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkA
        AAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYAAACBDAAA
        ACGQAQAAQCADAABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAA
        EMgAAAAQAhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACE
        QAYAAACBDAAAACGQAQAAQCADAABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAg
        AwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZ
        AAAABDIAAACEQAYAAACBDAAAACGQAQAAQCADAABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwA
        AAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAA
        ABDIAAAAEAIZAAAABDIAAACEQAYAAACBDAAAACGQAQAAQCADAABACGQAAAAQyAAAABACGQAAAAQyAAAA
        hEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABA
        IAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYAAACBDAAAACGQAQAAQCADAABACGQAAAAQyAAAABAC
        GQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRABgAAAIEM
        AAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYAAACBDAAAACGQAQAAQCADAABACGQA
        AAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAA
        AIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYAAACBDAAAACGQAQAA
        QCADAABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhkAAAAEMgAAAAQ
        AhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIAAACEQAYAAACB
        DAAAACGQAQAAQCADAABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEAAEAgAwAAQAhk
        AAAAEMgAAAAQAhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAAEAIZAAAABDIA
        AACEQAYAAACBDAAAACGQAQAAQCADAABACGQAAAAQyAAAABACGQAAAAQyAAAAhEAGAAAAgQwAAAAhkAEA
        AEAgAwAAQAhkAAAAEMgAAAAQAhkAAAAEMgAAAIRABgAAAIEMAAAAIZABAABAIAMAAEAIZAAAABDIAAAA
        EAIZAAAABDIAAABEC+T17hAAAAAmZt0CedV5AQAAAKZk1QJ52XkBAAAApmTZAvm18wIAAABMyWsL5Hnn
        BQAAAJiS+Y/Nxk7WAAAATNxm8+MzkO1kDQAAwFSttwPZRl0AAABM1XI7kBedAwAAAGAKFtuBPOscAAAA
        AFMw+38gJ5LfOwcBAADAM3v/7OLtQH7pHAgAAADP7KUXyJZZAwAAMDX/Lq/+M5ATyW+dgwEAAOAZvW03
        8W4gzztvAAAAgGc03x/IieR1500AAADwTNa7PdwLZJt1AQAA8Oz+25xrfyAnkj86bwYAAIBn8FE6+EAg
        u4sMAADAsyp3j/cHciJ51TkJAAAAPLJV6d8jAtmO1gAAADybP3auPi6QE8nLzskAAADgES1L954QyLPN
        OPzTOSkAAAA8kta2s9K9RwdyInnROTEAAAA8kkXp3ZMDOZFsqTUAAACP6uDS6k9l0JWl1uvOhwAAAMA9
        ay17cGn1pzLYaxx++j0yAAAAD6Q17M/St3uUwUHj8KvzgQAAAHCPfpWuPaAM/mocXjofCgAAAPfkpfTs
        X5TBUUQyAAAA9+vkOG7K4GgiGQAAgPtzVhw3ZXASkQwAAMD9ODuOmzI4mUgGAADg+30pjpsyOEt2t/YI
        KAAAAG6ttehJu1XvUwZny3OS2wOYd/9YAAAAuIbWoEc/5/hvyuBLxmG2GYdl548GAACAS2rtOStd+gVl
        cBHjsLDkGgAAgCtorbkoHXoBZXAx7iYDAABwWRe/a7ytDC5uHOabcVh1vhgAAAAcozXlvPTmhZXB1eRx
        UB+dLwoAAAA9rSG//PimY5XB1SWU7XYNAADAPq0ZbxbGn8rgZrL0+q1zIQAAAJim1ohXX0q9TxncXDbz
        aneV3zsXBwAAgOfWWrA14dU23zpWGXyrxHJ7RFTbmcwybAAAgOfTWq81X2u/b4/ibWVwd7IU+/X3BWw7
        lwlnAACA+9farTVca7nWdN+2dPpY/wPrd94EVITfWQAAAABJRU5ErkJggg==
</value>
  </data>
</root>