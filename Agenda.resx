<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAAA0CAYAAAA62j4JAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxEAAAsRAX9kX5EAAAQRSURBVGhD5ZldqGZjFMf3PL//8RU6M6YkpYMoV7gac2Uu
        lHzkRpJIzTQXuCEik7kgjBGjECFpijuiiI7cKFy5MOWO8dGIyMcF5evg1Trn2Xqt9bz73Wf2Pr1v7VO/
        c07/d631rvXs53tXo9GoGjJBGBpBGBpBGBpBGBpBGBpBGBpBGBpBGBpBGBpBmCdA54BuBz0K2gU63tt0
        JQjzAOgY0GOg30GjMV4DbfL2XQjCPAB60hVe8xtoi7fvQhBmDehc0F+F4o1vQMd6ny4EYdaAdhcKN/4B
        3eXtuxKEWQO6OBc7XvzfoKdB8vZdCULfgLaDngG9B/oQtAw6ALoSdIK3zz53g77IXf4t0OV9T341QegT
        0M2glUJ3rvkOtA+0teC7CYTX+yYIfQE6Lc/avugS34Ku9TFKgBLoItD9oFdAb4Ceyr1k3Q0WhL4AXVUo
        tAkb5w82dXXQEuidbOv9bd541fYQ3q+JIPQFaFshyWlYEXt9rBxvC+hwwcf7X+19mwhCX1h3BH1WSHIa
        tgfYVoh3a8G2xA3et4kg9AnoxkKCbVguxLqjYOf5BHSy920iClW1WFXVjqqqbkspHUwpLaeUDqWUvnSY
        Zp8dNNvsszgeK09Y7xYSncafoDNdrK2gjwu2hnX9D0Bn+Xqm8d8/KaU9KaUjVVWNUkp/LCwsjCSNVv9O
        YNzGfLLvEYtVNwbovMKhpg27fbKgk/JQeBP0Eeh90LOgy452k7T6xC1pSStrBS34RFpjvrlRVnJj1o3w
        vLdtwQGf7EZgPztSSv7LO2MxLbZ9CWin/7wFz/lkN4LQAwqJrIt6WKSUvh7rAS95uxY84pPdCNZ+rU18
        +6uq+snGsTWGFbFKYez/j9pOWjHfHMNi1cWfP2U7PIldPlnQqaCH8/i3bfTnoNfzbdFx3r4NUaiqpTyj
        78+rgM32hwurgGn2ma0CVrD5LI3Hyvt5m519cdOwVcDHOh30VcG25lPQBb6eaQShTzrsA94uxNpTsPPY
        6TEcrJoIQl/kp29PxSc5Ddvnby/Eu6lgW2Kn920iCH1h3bGQXBvu87FyvBPz2Pf249iG6Arv20QQ+gJ0
        SSHBJiz5xpk/H4henHBnaP528ZK8XxNB6AvQIujnQqIlfgRd72NMIh+LbwE9kXeC94Au9HZtCEKfgK6Z
        sg3+AfQQ6JSCr50m13W2PxqC0Degs21c55cadpnxMugB0KWTCgQ9nm+TbEI8lNf5dXXttgRh1uSDje8p
        ht329PpOwAjCrMlP2xdfs8/bdyUIswZ0Rt4J+uKN7/t+QRqEeQB0b6F441fQZm/fhSDMA3kXeSfoF9cA
        L3jbrgRhnrCnDbou3wfa5Nj7ShCEoRGEoRGEoRGEoRGEoRGEoRGEoRGEoRGEofEvMMcpugC3yr0AAAAA
        SUVORK5CYII=
</value>
  </data>
</root>